html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block; }

body {
  line-height: 1; }

ol,
ul {
  list-style: none; }

blockquote,
q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

img {
  display: inline-block;
  vertical-align: top;
  max-width: 100%; }

a {
  text-decoration: none;
  color: inherit; }

body {
  font-weight: 400;
  font-family: 'Fira Sans', sans-serif; }

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/iconmoon/icomoon.eot?4b47lk");
  src: url("../fonts/iconmoon//icomoon.eot?4b47lk#iefix") format("embedded-opentype"), url("../fonts/iconmoon//icomoon.ttf?4b47lk") format("truetype"), url("../fonts/iconmoon//icomoon.woff?4b47lk") format("woff"), url("../fonts/iconmoon//icomoon.svg?4b47lk#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-location:before {
  content: "\e947"; }

.icon-facebook2:before {
  content: "\ea91"; }

.icon-instagram:before {
  content: "\ea92"; }

.burger {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 50px;
  width: 50px;
  align-self: center;
  cursor: pointer; }
  .burger .burger-line, .burger:before, .burger:after {
    width: 80%;
    height: 3px;
    background-color: #f3f3f3; }
  .burger .burger-line {
    align-self: center;
    margin-bottom: calc(3px * 2.5); }
  .burger:before {
    content: '';
    margin-bottom: calc(3px * 2.5); }
  .burger:after {
    content: ''; }

.header-top {
  display: flex;
  justify-content: space-between; }

.header-top .nav-menu {
  background-color: #fbd341; }
  .header-top .nav-menu .nav-items {
    display: inline-block; }
    .header-top .nav-menu .nav-items::first-letter {
      text-transform: uppercase; }

.header-contacts-navbar-wrap {
  display: none; }

.header-contacts {
  display: flex;
  justify-content: space-between;
  font-size: 12px;
  color: rgba(243, 243, 243, 0.8); }
  .header-contacts address {
    display: inline; }
  .header-contacts [class*='icon'] {
    color: rgba(243, 243, 243, 0.8); }

* {
  box-sizing: border-box; }

body {
  min-width: 320px;
  font-size: 16px; }

.wrapper {
  position: relative;
  max-width: 100%;
  overflow: hidden; }

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px; }

.header-wrap {
  padding: 7px 0 0 0;
  background-image: url("../img/bg_header.jpg");
  background-size: cover; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
