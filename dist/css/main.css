html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block; }

body {
  line-height: 1; }

ol,
ul {
  list-style: none; }

blockquote,
q {
  quotes: none; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

img {
  display: inline-block;
  vertical-align: top;
  max-width: 100%; }

a {
  text-decoration: none;
  color: inherit; }

.header-contacts-phone a span, body {
  font-weight: 400;
  font-family: 'Fira Sans', sans-serif; }

.header-bottom-wrapper .header-bottom-slide-btn {
  font-weight: 400;
  font-family: 'Arial', sans-serif; }

.header-top .nav-menu .nav-items, .header-contacts, .header-bottom-wrapper {
  font-weight: 700;
  font-family: 'Arial', sans-serif; }

@font-face {
  font-family: 'icomoon';
  src: url("../fonts/iconmoon/icomoon.eot?4b47lk");
  src: url("../fonts/iconmoon//icomoon.eot?4b47lk#iefix") format("embedded-opentype"), url("../fonts/iconmoon//icomoon.ttf?4b47lk") format("truetype"), url("../fonts/iconmoon//icomoon.woff?4b47lk") format("woff"), url("../fonts/iconmoon//icomoon.svg?4b47lk#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-location:before {
  content: "\e947"; }

.icon-facebook2:before {
  content: "\ea91"; }

.icon-instagram:before {
  content: "\ea92"; }

.burger {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 50px;
  width: 50px;
  align-self: center;
  cursor: pointer; }
  @media (min-width: 762px) {
    .burger {
      display: none; } }
  .burger .burger-line, .burger:before, .burger:after {
    width: 80%;
    height: 3px;
    background-color: #f3f3f3; }
  .burger .burger-line {
    align-self: center;
    margin-bottom: calc(3px * 2.5); }
  .burger:before {
    content: '';
    margin-bottom: calc(3px * 2.5); }
  .burger:after {
    content: ''; }

.header-top-wrap {
  display: flex;
  justify-content: space-between;
  margin-bottom: 70px; }

.header-top .nav-menu {
  background-color: #fbd341;
  border-radius: 10px; }
  .header-top .nav-menu .nav-items {
    display: inline-block;
    font-size: 18px;
    padding: 15px 25px; }
    .header-top .nav-menu .nav-items::first-letter {
      text-transform: uppercase; }

.header-contacts-phone a {
  font-size: 14px; }

.header-contacts-navbar-wrap {
  display: none; }
  @media (min-width: 762px) {
    .header-contacts-navbar-wrap {
      display: flex;
      flex-direction: column; } }

.header-contacts {
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-family: Arial, serif;
  color: rgba(243, 243, 243, 0.8);
  margin-bottom: 15px; }
  .header-contacts address {
    display: inline; }
  .header-contacts img {
    width: 22px; }

.header-bottom {
  margin-bottom: 120px; }

.header-bottom-wrapper {
  font-size: 20px;
  color: #ffffff;
  width: 70.3125%;
  padding: 60px 100px 40px 0;
  position: relative;
  left: 0; }
  .header-bottom-wrapper:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    opacity: 0.49;
    background-color: #004c84; }
  .header-bottom-wrapper .header-bottom-slide-head {
    margin-bottom: 30px; }
  .header-bottom-wrapper .header-bottom-slide-btn {
    border: 0;
    outline: 0;
    padding: 10px 15px;
    font-size: 12px;
    background-color: #fbd341;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.3s; }
    .header-bottom-wrapper .header-bottom-slide-btn:hover {
      background-color: rgba(251, 211, 65, 0.7); }

[class*='header-bottom-slide'] {
  position: relative;
  margin-right: 30px;
  z-index: 1; }

.header-bottom-slide02 {
  color: #f00; }

.header-bottom-slide03 {
  color: #00f; }

.slick-dots {
  margin-top: 30px; }
  .slick-dots li {
    display: inline-block;
    margin-right: 15px; }
  .slick-dots button {
    border: 0;
    outline: 0;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background-color: #ffffff; }

* {
  box-sizing: border-box; }

body {
  min-width: 320px;
  font-size: 16px; }

.wrapper {
  position: relative;
  max-width: 100%;
  overflow: hidden; }

.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 15px; }

.header-wrap {
  padding: 7px 0 0 0;
  background-image: url("../img/bg_header.jpg");
  background-size: cover; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
